{"version":3,"sources":["webpack:///./src/templates/page-template.tsx"],"names":["Template","markdownRemark","data","frontmatter","html","className","path","title","id","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"2FAAA,0IAKe,SAASA,EAAT,GAEZ,IACOC,EADP,EADDC,KAEQD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KAErB,OACE,kBAAC,IAAD,CAAQC,UAAS,aAAeF,EAAYG,MAC1C,kBAAC,IAAD,CAAKC,MAAOJ,EAAYI,QACxB,yBAAKC,GAAG,mBACNC,wBAAyB,CAAEC,OAAQN,MAMpC,IAAMO,EAAY","file":"component---src-templates-page-template-tsx-e4013f4c0934a19fd7ed.js","sourcesContent":["import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Layout from '../components/Layout';\r\nimport SEO from '../components/SEO';\r\n\r\nexport default function Template({\r\n  data, // this prop will be injected by the GraphQL query below.\r\n}) {\r\n  const { markdownRemark } = data; // data.markdownRemark holds our post data\r\n  const { frontmatter, html } = markdownRemark;\r\n\r\n  return (\r\n    <Layout className={`page page-${frontmatter.path}`}>\r\n      <SEO title={frontmatter.title} />\r\n      <div id=\"markdown-content\"\r\n        dangerouslySetInnerHTML={{ __html: html }}\r\n      />\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query($path: String!) {\r\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\r\n      html\r\n      frontmatter {\r\n        path\r\n        title\r\n      }\r\n    }\r\n  }\r\n`;"],"sourceRoot":""}