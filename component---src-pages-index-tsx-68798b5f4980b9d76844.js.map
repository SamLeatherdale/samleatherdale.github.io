{"version":3,"sources":["webpack:///./src/components/project.tsx","webpack:///./src/pages/index.tsx"],"names":["ProjectStatus","ProjectLibrary","Project","props","repo","liveUrl","title","description","icon","isDesktopOnly","status","libraries","prodUrl","sourceUrl","iconUrl","libraryIcons","map","library","text","REACT","TYPESCRIPT","CANVAS","API","FORK","length","className","key","href","style","backgroundImage","target","Index","slug","query","render","data","allProjectsJson","edges","edge","node"],"mappings":"2GAEKA,EAIAC,E,8DAJAD,K,aAAAA,M,cAIAC,K,cAAAA,E,gBAAAA,E,gBAAAA,E,UAAAA,E,eAAAA,M,KAmBL,IAwEeC,EAxEC,SAACC,GAAwB,IAC9BC,EAA6ED,EAA7EC,KAAMC,EAAuEF,EAAvEE,QAASC,EAA8DH,EAA9DG,MAAOC,EAAuDJ,EAAvDI,YAAaC,EAA0CL,EAA1CK,KAAMC,EAAoCN,EAApCM,cAAeC,EAAqBP,EAArBO,OAAQC,EAAaR,EAAbQ,UACjEC,EAAUP,GAAO,oCAAiDD,EAClES,EAAY,qCAAqCT,EACjDU,EAAUN,EAAO,oBAAoBA,EAAS,0BAC9CO,GAAgBJ,GAAwB,IAAIK,KAAI,SAACC,GACnD,IAAIT,EAAO,GACPU,EAAO,GACPZ,EAAQ,GACZ,OAAQW,GACJ,KAAKhB,EAAekB,MAChBX,EAAO,eACPF,EAAQ,QACR,MACJ,KAAKL,EAAemB,WAChBF,EAAO,KACPZ,EAAQ,aACR,MACJ,KAAKL,EAAeoB,OAChBb,EAAO,eACPF,EAAQ,eACR,MACJ,KAAKL,EAAeqB,IAChBd,EAAO,gBACPF,EAAQ,MACR,MACJ,KAAKL,EAAesB,KAChBf,EAAO,qBACPF,EAAQ,iBAGhB,OAAIE,EAAKgB,OACE,uBAAGC,UAAWjB,EAAMF,MAAOA,EAAOoB,IAAKT,IAEvC,0BAAMX,MAAOA,GAAQY,MAKpC,OACA,yBAAKO,UAAU,WACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,uBACX,uBAAGA,UAAU,eACVE,KAAMf,EACNgB,MAAO,CAACC,gBAAiB,OAAOf,EAAT,SACvBC,EAAaS,QAAU,yBAAKC,UAAU,qBACpCV,IAGT,uBAAGU,UAAU,4BAA4BE,KAAMf,GAC3C,wBAAIa,UAAU,iBACTnB,GACCG,GACE,uBAAGgB,UAAU,uCACTnB,MAAM,4CACbI,GACG,0BAAMe,UAAS,0CAA4Cf,GAAWA,IAE9E,uBAAGe,UAAU,uBAAuBlB,IAExC,yBAAKkB,UAAU,kBACX,uBAAGA,UAAU,yBAAyBE,KAAMf,EAASkB,OAAO,UACxD,uBAAGL,UAAU,6BAA+B,0BAAMA,UAAU,wBAAhB,iBAEhD,uBAAGA,UAAU,yBAAyBE,KAAMd,EAAWiB,OAAO,UAC1D,uBAAGL,UAAU,gBAAkB,0BAAMA,UAAU,wBAAhB,oBC7CpCM,UAtCD,WAEV,OACA,kBAAC,IAAD,CAAQC,KAAK,QACT,kBAAC,IAAD,CAAK1B,MAAM,aAEX,+CACA,iUAEA,kBAAC,IAAD,CACI2B,MAAK,aAkBLC,OAAQ,SAAAC,GACJ,OAAOA,EAAKC,gBAAgBC,MAAMrB,KAAI,SAACsB,GACnC,IAAMC,EAAqBD,EAAKC,KAChC,OAAO,kBAAC,EAAD,eAASb,IAAKa,EAAKnC,MAAUmC,QAtBhD,Y","file":"component---src-pages-index-tsx-68798b5f4980b9d76844.js","sourcesContent":["import React from \"react\";\r\n\r\nenum ProjectStatus {\r\n    BETA = \"beta\"\r\n}\r\n\r\nenum ProjectLibrary {\r\n    REACT = \"react\",\r\n    TYPESCRIPT = \"ts\",\r\n    CANVAS = \"canvas\",\r\n    API = \"api\",\r\n    FORK = \"forked\"\r\n}\r\n\r\nexport interface ProjectProps {\r\n    repo: string;\r\n    liveUrl?: string;\r\n    title: string\r\n    description: string\r\n    icon?: string\r\n    isDesktopOnly: boolean,\r\n    status?: ProjectStatus,\r\n    libraries?: ProjectLibrary[]\r\n}\r\n\r\nconst Project = (props: ProjectProps) => {\r\n    const {repo, liveUrl, title, description, icon, isDesktopOnly, status, libraries} = props;\r\n    const prodUrl = liveUrl ? liveUrl : `https://samleatherdale.github.io/${repo}`;\r\n    const sourceUrl = `https://github.com/SamLeatherdale/${repo}`;\r\n    const iconUrl = icon ? `/images/projects/${icon}` : '/icons/icon-256x256.png';\r\n    const libraryIcons = (libraries ? libraries : []).map((library) => {\r\n        let icon = \"\";\r\n        let text = \"\";\r\n        let title = \"\";\r\n        switch (library) {\r\n            case ProjectLibrary.REACT:\r\n                icon = \"fab fa-react\";\r\n                title = \"React\";\r\n                break;\r\n            case ProjectLibrary.TYPESCRIPT:\r\n                text = \"TS\";\r\n                title = \"TypeScript\";\r\n                break;\r\n            case ProjectLibrary.CANVAS:\r\n                icon = \"fas fa-brush\";\r\n                title = \"HTML5 Canvas\";\r\n                break;\r\n            case ProjectLibrary.API:\r\n                icon = \"fas fa-server\";\r\n                title = \"API\";\r\n                break;\r\n            case ProjectLibrary.FORK:\r\n                icon = \"fas fa-code-branch\";\r\n                title = \"Forked project\";\r\n                break;\r\n        }\r\n        if (icon.length) {\r\n            return <i className={icon} title={title} key={library}/>\r\n        } else {\r\n            return <span title={title}>{text}</span>\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n    <div className=\"project\">\r\n        <div className=\"project-main\">\r\n            <div className=\"project-icon-column\">\r\n                <a className=\"project-icon\"\r\n                   href={prodUrl}\r\n                   style={{backgroundImage: `url(${iconUrl})`}}></a>\r\n                {!!libraryIcons.length && <div className=\"project-libraries\">\r\n                    {libraryIcons}\r\n                </div>}\r\n            </div>\r\n            <a className=\"project-text inherit-link\" href={prodUrl}>\r\n                <h3 className=\"project-title\">\r\n                    {title}\r\n                    {!isDesktopOnly &&\r\n                        <i className=\"project-responsive fas fa-mobile-alt\"\r\n                            title=\"Project is optimized for mobile devices\"></i>}\r\n                    {status &&\r\n                        <span className={`badge-pill project-badge project-badge-${status}`}>{status}</span>}\r\n                </h3>\r\n                <p className=\"project-description\">{description}</p>\r\n            </a>\r\n            <div className=\"project-source\">\r\n                <a className=\"btn btn-primary-themed\" href={prodUrl} target=\"_blank\">\r\n                    <i className=\"fas fa-external-link-alt\"></i><span className=\"project-source-label\">View Project</span>\r\n                </a>\r\n                <a className=\"btn btn-outline-themed\" href={sourceUrl} target=\"_blank\">\r\n                    <i className=\"fas fa-code\"></i><span className=\"project-source-label\">View Source</span>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)};\r\nexport default Project;","import React from \"react\"\r\nimport {Link} from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport {StaticQuery, graphql} from \"gatsby\";\r\nimport Project, {ProjectProps} from \"../components/project\";\r\n\r\nconst Index = () => {\r\n\r\n    return (\r\n    <Layout slug=\"home\">\r\n        <SEO title=\"Projects\"/>\r\n\r\n        <h2>GitHub Projects</h2>\r\n        <p>The following are projects I've build in my spare time, mainly to enhance my knowledge of various aspects of web development. The source code is freely available to view and modify on GitHub. I generally use the GNU GPLv3 license for my work, to ensure all modifications stay open and free.</p>\r\n\r\n        <StaticQuery\r\n            query={graphql`\r\n                query ProjectsQuery {\r\n                    allProjectsJson {\r\n                        edges {\r\n                            node {\r\n                                title\r\n                                repo\r\n                                liveUrl\r\n                                icon\r\n                                description\r\n                                isDesktopOnly\r\n                                status\r\n                                libraries\r\n                            }                        \r\n                        }\r\n                    }\r\n                }\r\n            `}\r\n            render={data => {\r\n                return data.allProjectsJson.edges.map((edge: any) => {\r\n                    const node: ProjectProps = edge.node;\r\n                    return <Project key={node.repo} {...node} />\r\n                });\r\n            }}\r\n        />\r\n    </Layout>\r\n)};\r\n\r\nexport default Index;\r\n"],"sourceRoot":""}