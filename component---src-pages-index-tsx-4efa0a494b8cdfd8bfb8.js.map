{"version":3,"sources":["webpack:///./src/components/project.tsx","webpack:///./src/pages/index.tsx"],"names":["Project","props","location","title","description","icon","isDesktopOnly","liveUrl","sourceUrl","className","href","style","backgroundImage","target","Index","slug","query","render","data","allProjectsJson","edges","map","edge","node","key"],"mappings":"+JA+CeA,EArCC,SAACC,GAAwB,IAC9BC,EAAqDD,EAArDC,SAAUC,EAA2CF,EAA3CE,MAAOC,EAAoCH,EAApCG,YAAaC,EAAuBJ,EAAvBI,KAAMC,EAAiBL,EAAjBK,cACrCC,EAAU,oCAAoCL,EAC9CM,EAAY,qCAAqCN,EAEvD,OACA,yBAAKO,UAAU,WACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,uBACX,uBAAGA,UAAU,eACVC,KAAMH,EACNI,MAAO,CAACC,gBAAiB,wBAAwBP,EAA1B,OAC1B,uBAAGI,UAAU,wBACVC,KAAMF,EACNK,OAAO,UACN,yBAAKJ,UAAU,0BACX,uBAAGA,UAAU,gBAAkB,0BAAMA,UAAU,wBAAhB,kBAI3C,uBAAGA,UAAU,4BAA4BC,KAAMH,GAC3C,wBAAIE,UAAU,iBACTN,GACCG,GAAiB,uBAAGG,UAAU,0CAEpC,uBAAGA,UAAU,uBAAuBL,KAG5C,yBAAKK,UAAU,kBACX,yBAAKA,UAAU,SACX,uBAAGA,UAAU,yBAAyBC,KAAMF,EAAWK,OAAO,UAC1D,uBAAGJ,UAAU,gBAAkB,0BAAMA,UAAU,wBAAhB,oBCEpCK,UAnCD,WAEV,OACA,kBAAC,IAAD,CAAQC,KAAK,QACT,kBAAC,IAAD,CAAKZ,MAAM,aAEX,+CACA,4FAEA,kBAAC,IAAD,CACIa,MAAK,aAeLC,OAAQ,SAAAC,GACJ,OAAOA,EAAKC,gBAAgBC,MAAMC,KAAI,SAACC,GACnC,IAAMC,EAAqBD,EAAKC,KAChC,OAAO,kBAAC,EAAD,eAASC,IAAKD,EAAKrB,UAAcqB,QAnBpD,Y","file":"component---src-pages-index-tsx-4efa0a494b8cdfd8bfb8.js","sourcesContent":["import React from \"react\";\r\n\r\nexport interface ProjectProps {\r\n    location: string;\r\n    title: string\r\n    description: string\r\n    icon: string\r\n    isDesktopOnly: boolean\r\n}\r\n\r\nconst Project = (props: ProjectProps) => {\r\n    const {location, title, description, icon, isDesktopOnly} = props;\r\n    const liveUrl = `https://samleatherdale.github.io/${location}`;\r\n    const sourceUrl = `https://github.com/SamLeatherdale/${location}`;\r\n\r\n    return (\r\n    <div className=\"project\">\r\n        <div className=\"project-main\">\r\n            <div className=\"project-icon-column\">\r\n                <a className=\"project-icon\"\r\n                   href={liveUrl}\r\n                   style={{backgroundImage: `url(/images/projects/${icon})`}}></a>\r\n                <a className=\"project-source-mobile\"\r\n                   href={sourceUrl}\r\n                   target=\"_blank\">\r\n                    <div className=\"btn btn-primary-themed\">\r\n                        <i className=\"fas fa-code\"></i><span className=\"project-source-label\">View Source</span>\r\n                    </div>\r\n                </a>\r\n            </div>\r\n            <a className=\"project-text inherit-link\" href={liveUrl}>\r\n                <h3 className=\"project-title\">\r\n                    {title}\r\n                    {!isDesktopOnly && <i className=\"project-responsive fas fa-mobile-alt\"></i>}\r\n                </h3>\r\n                <p className=\"project-description\">{description}</p>\r\n            </a>\r\n        </div>\r\n        <div className=\"project-source\">\r\n            <div className=\"vflex\">\r\n                <a className=\"btn btn-primary-themed\" href={sourceUrl} target=\"_blank\">\r\n                    <i className=\"fas fa-code\"></i><span className=\"project-source-label\">View Source</span>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)};\r\nexport default Project;","import React from \"react\"\r\nimport {Link} from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport {StaticQuery, graphql} from \"gatsby\";\r\nimport Project, {ProjectProps} from \"../components/project\";\r\n\r\nconst Index = () => {\r\n\r\n    return (\r\n    <Layout slug=\"home\">\r\n        <SEO title=\"Projects\"/>\r\n\r\n        <h2>GitHub Projects</h2>\r\n        <p>The following projects are hosted right here on GitHub Pages.</p>\r\n\r\n        <StaticQuery\r\n            query={graphql`\r\n                query ProjectsQuery {\r\n                    allProjectsJson {\r\n                        edges {\r\n                            node {\r\n                                title\r\n                                location\r\n                                icon\r\n                                description\r\n                                isDesktopOnly\r\n                            }                        \r\n                        }\r\n                    }\r\n                }\r\n            `}\r\n            render={data => {\r\n                return data.allProjectsJson.edges.map((edge: any) => {\r\n                    const node: ProjectProps = edge.node;\r\n                    return <Project key={node.location} {...node} />\r\n                });\r\n            }}\r\n        />\r\n    </Layout>\r\n)};\r\n\r\nexport default Index;\r\n"],"sourceRoot":""}