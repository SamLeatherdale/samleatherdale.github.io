{"version":3,"sources":["webpack:///./src/templates/pageTemplate.tsx"],"names":["Template","markdownRemark","data","frontmatter","html","slug","path","title","id","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"0FAAA,+HAKe,SAASA,EAAT,GAEZ,IACSC,EADT,EADCC,KAEQD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KAErB,OACI,kBAAC,IAAD,CAAQC,KAAMF,EAAYG,MACtB,kBAAC,IAAD,CAAKC,MAAOJ,EAAYI,QACxB,yBAAKC,GAAG,mBACJC,wBAAyB,CAAEC,OAAQN,MAM5C,IAAMO,EAAY","file":"component---src-templates-page-template-tsx-c2fccc57c17f6504ddd4.js","sourcesContent":["import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\";\r\nimport SEO from \"../components/seo\";\r\n\r\nexport default function Template({\r\n    data, // this prop will be injected by the GraphQL query below.\r\n}) {\r\n    const { markdownRemark } = data; // data.markdownRemark holds our post data\r\n    const { frontmatter, html } = markdownRemark;\r\n\r\n    return (\r\n        <Layout slug={frontmatter.path}>\r\n            <SEO title={frontmatter.title} />\r\n            <div id=\"markdown-content\"\r\n                dangerouslySetInnerHTML={{ __html: html }}\r\n            />\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query($path: String!) {\r\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\r\n      html\r\n      frontmatter {\r\n        path\r\n        title\r\n      }\r\n    }\r\n  }\r\n`;"],"sourceRoot":""}